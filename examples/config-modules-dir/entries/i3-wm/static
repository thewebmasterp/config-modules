 # -*- mode: i3wm-config -*-
 # vim: filetype=i3config

 # meta:
 #   author:
 #     username: thewebmasterp
 #     email: thewebmasterp@gmail.com
 #     github: https://github.com/thewebmasterp
 #     website: https://thewebmasterp.com



 #
 # Init
 #

 # Set the modifier
 set $mod Mod4

 # Auto start a notification daemon
 exec --no-startup-id dunst -config ~/.config/dunst/dunstrc

 # Auto start battery tracker
 exec --no-startup-id ~/.bin/i3-battery-popup -L 16 -l 6 -t 1m -n -m "Battery status"

 # Auto start nm-applet - GNOME front-end for NetworkManager
 exec --no-startup-id nm-applet

 # Auto start the compositing window manager (compositor)
 exec --no-startup-id picom --dbus --config ~/.config/picom/picom.conf

 # Auto start clipster (Clipboard manager)
 exec --no-startup-id clipster -d

 # Auto configure monitor setup
 exec --no-startup-id multihead-reload

 # Reload the configuration file
 bindsym $mod+Shift+c reload

 # Restart i3 inplace
 bindsym $mod+Shift+r restart

 # Open a new terminal window
 bindsym $mod+Return exec --no-startup-id alacritty

 # Open a new floating terminal window
 bindsym $mod+Shift+Return exec alacritty --class float



 #
 # Layout/Navigation
 #

 # Use Mouse+$mod to drag floating windows to their wanted position
 floating_modifier $mod

 # Define names for default workspaces 
 set $ws1 "1"
 set $ws2 "2"
 set $ws3 "3"
 set $ws4 "4"
 set $ws5 "5"
 set $ws6 "6"
 set $ws7 "7"
 set $ws8 "8"
 set $ws9 "9"
 set $ws10 "10"
 set $scratch "show"

 # Switch to a workspace
 bindsym $mod+1 workspace number $ws1
 bindsym $mod+2 workspace number $ws2
 bindsym $mod+3 workspace number $ws3
 bindsym $mod+4 workspace number $ws4
 bindsym $mod+5 workspace number $ws5
 bindsym $mod+6 workspace number $ws6
 bindsym $mod+7 workspace number $ws7
 bindsym $mod+8 workspace number $ws8
 bindsym $mod+9 workspace number $ws9
 bindsym $mod+0 workspace number $ws10
 bindsym $mod+grave scratchpad show

 # Move workspace to monitor (TODO: Add no-monitor support)
 bindsym $mod+Shift+Ctrl+Left move workspace to output left
 bindsym $mod+Shift+Ctrl+Right move workspace to output right

 # Rofi program launcher (combi from run and drun; ssh; window)
 bindsym $mod+d exec "rofi -config '~/.config/rofi/config.rasi' \
  -show 'combi' \
  -combi-modi 'drun,run' \
  -modi 'combi,ssh,window' \
  -show-icons \
  -application-fallback-icon '~/.config/rofi/fallback-icon.png' \
  -kb-cancel 'Super_L' " \

 # Rofi assistant (emoji; clipboard; notes; themes)
 bindsym $mod+c exec "rofi -config '~/.config/rofi/config.rasi' \
  -theme-str '#element { children: [element-text]; }' \
  -show 'emoji' \
  -modi 'emoji:/usr/bin/rofimoji,clipboard:~/.bin/clipboard.js,notes:rofi-notes-org,themes:~/.bin/themes.js' \
  -kb-cancel 'Super_L' " \

 # Change focus
 bindsym $mod+j focus left
 bindsym $mod+k focus down
 bindsym $mod+l focus up
 bindsym $mod+colon focus right
 bindsym $mod+Left focus left
 bindsym $mod+Down focus down
 bindsym $mod+Up focus up
 bindsym $mod+Right focus right

 # Focus the parent container
 bindsym $mod+a focus parent

 # Change focus between tiling / floating windows
 bindsym $mod+space focus mode_toggle

 # Move focused container to a workspace
 bindsym $mod+Shift+1 move container to workspace number $ws1
 bindsym $mod+Shift+2 move container to workspace number $ws2
 bindsym $mod+Shift+3 move container to workspace number $ws3
 bindsym $mod+Shift+4 move container to workspace number $ws4
 bindsym $mod+Shift+5 move container to workspace number $ws5
 bindsym $mod+Shift+6 move container to workspace number $ws6
 bindsym $mod+Shift+7 move container to workspace number $ws7
 bindsym $mod+Shift+8 move container to workspace number $ws8
 bindsym $mod+Shift+9 move container to workspace number $ws9
 bindsym $mod+Shift+0 move container to workspace number $ws10

 # Move focused container within the current workspace
 bindsym $mod+Shift+j move left
 bindsym $mod+Shift+k move down
 bindsym $mod+Shift+l move up
 bindsym $mod+Shift+colon move right
 bindsym $mod+Shift+Left move left
 bindsym $mod+Shift+Down move down
 bindsym $mod+Shift+Up move up
 bindsym $mod+Shift+Right move right

 # Move focused container to a side (TODO: Add no-monitor support)
 bindsym $mod+KP_End   exec --no-startup-id ~/.bin/movetocorner 1
 bindsym $mod+KP_Down  exec --no-startup-id ~/.bin/movetocorner 2
 bindsym $mod+KP_Next  exec --no-startup-id ~/.bin/movetocorner 3
 bindsym $mod+KP_Left  exec --no-startup-id ~/.bin/movetocorner 4
 bindsym $mod+KP_Begin exec --no-startup-id ~/.bin/movetocorner 5
 bindsym $mod+KP_Right exec --no-startup-id ~/.bin/movetocorner 6
 bindsym $mod+KP_Home  exec --no-startup-id ~/.bin/movetocorner 7 
 bindsym $mod+KP_Up    exec --no-startup-id ~/.bin/movetocorner 8
 bindsym $mod+KP_Prior exec --no-startup-id ~/.bin/movetocorner 9

 # Change container layout
 bindsym $mod+s layout stacking
 bindsym $mod+w layout tabbed
 bindsym $mod+e layout toggle split

 # Split 
 bindsym $mod+h split h
 bindsym $mod+v split v
 bindsym $mod+b exec --no-startup-id ~/.bin/bestsplit

 # Replace a window (Still a dream)
 # bindsym $mod+r exec --no-startup-id ~/.bin/bestsplit; rofi -show modi; kill

 # Resize focused window
 bindsym $mod+Ctrl+j resize shrink width 20 px or 20 ppt
 bindsym $mod+Ctrl+k resize grow height 20 px or 20 ppt 
 bindsym $mod+Ctrl+l resize shrink height 20 px or 20 ppt
 bindsym $mod+Ctrl+colon resize grow width 20 px or 20 ppt
 bindsym $mod+Ctrl+Left resize shrink width 20 px or 20 ppt
 bindsym $mod+Ctrl+Down resize grow height 20 px or 20 ppt
 bindsym $mod+Ctrl+Up resize shrink height 20 px or 20 ppt
 bindsym $mod+Ctrl+Right resize grow width 20 px or 20 ppt

 # Toggle between tiling / floating mode
 bindsym $mod+Shift+space floating toggle

 # Enter fullscreen mode for the focused container
 bindsym $mod+f fullscreen toggle

 # Kill the focused window
 bindsym $mod+Shift+q kill

 # Control the mouse with your keyboard
 #
 # Note: There could be a better implementation of this function. 
 # I encontered the following issues:
 #
 # 1. Right clicking a GUI program plus moving the mouse closes
 #    the menu immediately. Same with trying to drag anything.
 #
 # 1.1  Two binds can't run at the same time. What if I want to move the mouse
 #      in diagonal? Drag something while moving the mouse?
 #
 # 2. Not very convinient keybindings. If problem 1 is fixed, playing with bindsym 
 #    or bindcode --release flag could resolve this issue.
 #
 # Despite it's minuses, I kept it in this config as a backup solution (my laptop's touchpad is broken) 
 #
 mode "keyboard mouse" {

	# Speeds
	set $slow 1
	set $quick 10
	set $fast 50

	# Mouse movement (slow)
	bindsym Ctrl+j exec xdotool mousemove_relative -- -$slow 0
	bindsym Ctrl+k exec xdotool mousemove_relative 0 $slow
	bindsym Ctrl+l exec xdotool mousemove_relative -- 0 -$slow
	bindsym Ctrl+colon exec xdotool mousemove_relative $slow 0
	bindsym Ctrl+Left exec xdotool mousemove_relative -- -$slow 0
	bindsym Ctrl+Down exec xdotool mousemove_relative 0 $slow
	bindsym Ctrl+Up exec xdotool mousemove_relative -- 0 -$slow
	bindsym Ctrl+Right exec xdotool mousemove_relative $slow 0

	# Mouse movement (quick)
	bindsym j exec xdotool mousemove_relative -- -$quick 0
	bindsym k exec xdotool mousemove_relative 0 $quick
	bindsym l exec xdotool mousemove_relative -- 0 -$quick
	bindsym colon exec xdotool mousemove_relative $quick 0
	bindsym Left exec xdotool mousemove_relative -- -$quick 0
	bindsym Down exec xdotool mousemove_relative 0 $quick
	bindsym Up exec xdotool mousemove_relative -- 0 -$quick
	bindsym Right exec xdotool mousemove_relative $quick 0

	# Mouse movement (fast)
	bindsym Shift+j exec xdotool mousemove_relative -- -$fast 0
	bindsym Shift+k exec xdotool mousemove_relative 0 $fast
	bindsym Shift+l exec xdotool mousemove_relative -- 0 -$fast
	bindsym Shift+colon exec xdotool mousemove_relative $fast 0
	bindsym Shift+Left exec xdotool mousemove_relative -- -$fast 0
	bindsym Shift+Down exec xdotool mousemove_relative 0 $fast
	bindsym Shift+Up exec xdotool mousemove_relative -- 0 -$fast
	bindsym Shift+Right exec xdotool mousemove_relative $fast 0

	# Left click
	bindsym f exec xdotool click 1
    # drag/release
	#bindsym Shift+f exec xdotool mousedown 1
	#bindsym $mod+f exec xdotool mouseup 1

	# Middle click
	bindsym d exec xdotool click 2
    # drag/release
	#bindsym Shift+d exec xdotool mousedown 2
	#bindsym $mod+d exec xdotool mouseup 2

	# Right click
	bindsym s exec xdotool click 3
	# drag/release
	#bindsym Shift+s exec xdotool mousedown 3
	#bindsym $mod+s exec xdotool mouseup 3

	# Exit "keyboard mouse" mode
 	bindsym Escape mode "default"
	bindsym $mod+m mode "default"

 }

 # Enter "keyboard mouse" mode
 bindsym $mod+m mode "keyboard mouse"



 #
 # Styling & i3bar
 #

 # Invert the colors of a focused window
 bindsym --release $mod+i exec --no-startup-id ~/.bin/color-inverter focused

 # Set font for window titles and default font for the bar
 font pango:JetBrainsMono 11

 # class                 border              bground              text                 indicator            child_border
 client.focused          $color-focused-dark $color-focused-dark  $color-white         $color-focused-light $color-focused-dark
 client.focused_inactive $color-black-light  $color-black-lighter $color-white         $color-black-lighter $color-black-lighter
 client.unfocused        $color-black-light  $color-black-light   $color-black-lighter $color-black-light   $color-black-light
 client.urgent           $color-black-light  $color-urgent        $color-white         $color-urgent        $color-urgent
 client.placeholder      $color-black        $color-black         $color-white         $color-black         $color-black
 client.background       $color-black-light

 # Default border 
 default_border pixel 5

 # Background setter
 # picom called earlier; no need to call it again.
 # exec_always --no-startup-id picom
 # exec_always --no-startup-id feh --bg-fill ~/Desktop/BgImg/done.png

 bar {
    id bar-1
    output primary
    output HDMI2
    tray_output primary
    status_command i3-status -c ~/.config/i3-status/config.yml
    position top
    font pango: JetBrainsMono 11
    separator_symbol " | "
    colors {
    	   background $color-black
    	   statusline $color-white
    	   separator  $color-black-lighter

    	   focused_workspace  $color-focused-light $color-focused-dark $color-white
    	   active_workspace   $color-black-light   $color-black        $color-white
    	   inactive_workspace $color-black-light   $color-black        $color-black-lighter
    	   urgent_workspace   $color-black-light   $color-urgent       $color-white
    	   binding_mode       $color-black-light   $color-urgent       $color-white
    }
 }

 # i3_gaps specific
 smart_gaps on
 smart_borders no_gaps
 gaps inner 10
 gaps outer 10
 bindsym $mod+g gaps inner current set 0; gaps outer current set 0;
 bindsym $mod+Shift+g gaps inner current set 10; gaps outer current set 10;

 # Per application
 # Note: Get the properties of a window with xprop (append [property] or "| grep")
 for_window [window_type="dialog"] border pixel 5
 for_window [instance="float" class="Alacritty"] floating enable



 #
 # Media
 #

 # Audio controls
 # 
 # Plain and simple
 # set $refresh_i3status killall -SIGUSR1 i3status
 # bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +5% && $refresh_i3status
 # bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -5% && $refresh_i3status
 # bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle && $refresh_i3status
 # bindsym XF86AudioMicMute exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ toggle && $refresh_i3status
 #
 # With notification support
 bindsym XF86AudioRaiseVolume exec --no-startup-id ~/.bin/changeVolume +5%
 bindsym XF86AudioLowerVolume exec --no-startup-id ~/.bin/changeVolume -5%
 bindsym XF86AudioMute exec --no-startup-id ~/.bin/changeVolume sink-mute
 # bindsym XF86AudioMicMute exec --no-startup-id /usr/local/bin/changeVolume source-mute
 #

 # Brightness controls
 #
 # Plain and simple
 # bindsym XF86MonBrightnessUp exec xbacklight -inc 20
 # bindsym XF86MonBrightnessDown exec xbacklight -dec 20
 #
 # With notification support
 bindsym XF86MonBrightnessUp exec ~/.bin/changeBrightness -inc 10
 bindsym XF86MonBrightnessDown exec ~/.bin/changeBrightness -dec 10
 #


 #
 # Unclassified
 #

#Note: get these values with xprop (append [property] or "| grep")

# for_window [window_type="dialog"] border pixel 5


# yfor_window [instance="float" class="Alacritty"] floating enable


#clipboard (greenclip; old)
#exec --no-startup-id greenclip daemon>/dev/null
#bindsym $mod+c exec --no-startup-id rofi -modi "clipboard:greenclip print" -show clipboard -run-command '{cmd}'

# Start clipster daemon
# exec --no-startup-id clipster -d

# Reload monitor
# exec --no-startup-id multihead-reload

# shortcut to selection widget (primary)
# bindsym $mod+c exec clipster -sp #this launches the default gtk copy-paste chooser. I prefer rofi, so:
# Fuck clippy.py. I re-created it so that it can be used as a rofi modi (using js)
# bindsym $mod+c exec --no-startup-id ~/.bin/clippy

# Emoji and clipboard menus
# bindsym $mod+c exec "rofi -config '~/.config/rofi/config.rasi' \
#-theme-str '#element { children: [element-text]; }' \
#-show 'emoji' \
#-modi 'emoji:/usr/bin/rofimoji,clipboard:~/.bin/clipboard.js,notes:rofi-notes-org,themes:~/.bin/themes.js' \
#-kb-cancel 'Super_L' "

# bindsym $mod+d exec "rofi -config '~/.config/rofi/config.rasi' \
#-show 'combi' \
#-combi-modi 'drun,run' \
#-modi 'combi,ssh,window' \
#-show-icons \
#-application-fallback-icon '~/.config/rofi/fallback-icon.png' \
#-kb-cancel 'Super_L' "




 # TODO: Implement scratchpad, holding productivity and commonly used tools 
 #for_window [title="scratchpad"] move scratchpad 
 #bindsym $mod+i exec alacritty --title scratchpad -e ranger
 #bindsym $mod+minus scratchpad show



